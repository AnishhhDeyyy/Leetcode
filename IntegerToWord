public class IntegerToword {
    public static void main(String[] args) {
        int num = 12345;
        final Map<Integer,String> belowten = Map.of(0, "", 1, "One", 2, "Two", 3, "Three", 4, "Four", 5, "Five",
                6, "Six", 7, "Seven", 8, "Eight", 9, "Nine");
        final Map<Integer,String> belowtwenty = Map.of(10, "Ten", 11, "Eleven", 12, "Twelve", 13, "Thirteen", 14, "Fourteen",
                15, "Fifteen", 16, "Sixteen", 17, "Seventeen", 18, "Eighteen", 19, "Nineteen");
        final Map<Integer,String> belowHundred = Map.of( 2, "Twenty", 3, "Thirty", 4, "Forty", 5, "Fifty",
                6, "Sixty", 7, "Seventy", 8, "Eighty", 9, "Ninety");
        String s = solve(num,belowten,belowtwenty,belowHundred);
    }
    public static String solve(int num, Map<Integer,String> belowten,Map<Integer,String> belowtwenty,Map<Integer,String> belowHundred){
        if(num == 0){
            return "Zero";
        }
        if (num<10) {
            return belowten.get(num);
        }
        if(num<20){
            return belowtwenty.get(num);
        }
        if(num<100){
            return belowHundred.get(num/10) + (num%10==0 ? "": " "+belowten.get(num%10));
        }
        if(num<1000){
            return solve(num/100,belowten,belowtwenty,belowHundred) + "Hundred" +(num%100==0 ? "":" "+solve(num%100,belowten,belowtwenty,belowHundred));
        }
        if(num<1000000){
            return solve(num/1000,belowten,belowtwenty,belowHundred) + "Thousand" + (num%1000==0? "":" "+solve(num%1000,belowten,belowtwenty,belowHundred));
        }
        if(num<1000000000){
            return solve(num/1000000,belowten,belowtwenty,belowHundred) + "Million" + (num%1000000==0?"":" "+solve(num%1000000,belowten,belowtwenty,belowHundred));
        }
        return solve(num/1000000000,belowten,belowtwenty,belowHundred) + "Billion" + (num%1000000000==0?"":" "+solve(num%1000000000,belowten,belowtwenty,belowHundred));

    }
}
