class Solution {
    public int[] topKFrequent(int[] nums, int k) {
         PriorityQueue<Integer> queue = new PriorityQueue<>(Collections.reverseOrder());
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(map.containsKey(nums[i])){
                map.put(nums[i],map.get(nums[i])+1);
            }else{
                map.put(nums[i],1);
            }
        }
        for(Integer i : map.keySet()){
            queue.add(map.get(i));
        }
        int[] re = new int[k];
        int in = 0;
        while (k!=0){
            for(Integer i : map.keySet()){

                if(Objects.equals(map.get(i), queue.peek())){
                    re[in++] = i;
                    queue.poll();
                    map.put(i,-1);
                    break;
                }
            }
            k--;
        }
        return re;
    }
}
