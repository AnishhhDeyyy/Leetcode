class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i=0;i<nums2.length;i++){
            map.put(nums2[i],i);
        }
        Stack<Integer> stack = new Stack<>();
        int[] copy = new int[nums2.length];
        int in = nums2.length - 2;
        copy[nums2.length-1]=-1;
        stack.add(nums2[nums2.length-1]);
        for (int i = nums2.length-2; i >=0; i--) {
            if (!stack.isEmpty() && stack.peek() > nums2[i]) {
                if(!stack.isEmpty()) {
                    copy[in--] = stack.peek();
                }
                stack.add(nums2[i]);
            }else{
                 while (!stack.isEmpty()&&nums2[i]>stack.peek()) {
                    stack.pop();
                }
                if(!stack.isEmpty()) {
                    copy[in--] = stack.peek();
                }else{
                    copy[in--] = -1;
                }
                stack.add(nums2[i]);
            }
        }
        int[] numss = new int[nums1.length];
        int inty = 0;
        for(int i=0;i<nums1.length;i++){
            int t = map.get(nums1[i]);
            numss[inty++] = copy[t];
        }
        return numss;
    }
}
